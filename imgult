#!/bin/sh
## imgult, the image-ultimator

# Ryan P.C. McQuen | Everett, WA | ryan.q@linux.com
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version, with the following exception:
# the text of the GPL license may be omitted.

# This program is distributed in the hope that it will be useful, but
# without any warranty; without even the implied warranty of
# merchantability or fitness for a particular purpose. Compiling,
# interpreting, executing or merely reading the text of the program
# may result in lapses of consciousness and/or very being, up to and
# including the end of all existence and the Universe as we know it.
# See the GNU General Public License for more details.

# You may have received a copy of the GNU General Public License
# along with this program (most likely, a file named COPYING). If
# not, see <http://www.gnu.org/licenses/>.

## prepend imgult on the command line with
## BACKUPIMAGES=true  (to back everything up)
## EXIFREMOVE=n  (to keep EXIF data)
BACKUPIMAGES=${BACKUPIMAGES:-false}
EXIFREMOVE=${EXIFREMOVE:-true}

## fancy syntax thanks to B. Watson
OPTLEVEL=${1:-85}

## file extensions are easily added now,
## thanks to B. Watson
JPGEXTENSIONS="jpg jpeg jpe jfif jif jfi thm"
PNGEXTENSIONS="png apng mng"
GIFEXTENSIONS="gif"
SVGEXTENSIONS="svg svgz"

if [ -z "$JPEGTRAN" ]; then
  export PATH=/usr/local/Cellar/mozjpeg/*/bin:/opt/libmozjpeg/bin:/opt/mozjpeg/bin:$PATH
  JPEGTRAN="$(which jpegtran)"
  if [ -z "$JPEGTRAN" ]; then
    echo "Can't find jpegtran in $PATH, install it or set JPEGTRAN in the environment"
    exit 1
  fi
fi

find . -type f -a \( -iname '*.jpg' -o -iname '*.jpeg' -o -iname '*.jpe' \
  -o -iname '*.jfif' -o -iname '*.jif' -o -iname '*.jfi' -o -iname '*.thm' \
  -o -iname '*.png' -o -iname '*.apng' -o -iname '*.mng' -o -iname '*.gif' \
  -o -iname '*.svg' -o -iname '*.svgz' \) \
  > imgult-files.txt

## back it up!
if [ "$BACKUPIMAGES" = true ]; then
  rsync -avz --files-from=imgult-files.txt $PWD imgult-backup-files/
fi

## clear out that exif!
## detects and uses exiftool if available
if [ "$EXIFREMOVE" = "true" ]; then
  EXTRAJTRANARGS="-copy none"
  EXTRAOPTPNARGS="-strip all"
  if [ ! -z "$(which exiftool)" ]; then
    cat imgult-files.txt | \
    while read IMGULT_FILE; do
      exiftool -v -overwrite_original -all= "$IMGULT_FILE"
    done
  fi
fi

## standard options with verbosity
egrep -i "($(echo $JPGEXTENSIONS | tr ' ' '|')\$)" imgult-files.txt | \
while read IMGULT_FILE; do
  $JPEGTRAN -verbose $EXTRAJTRANARGS -outfile "$IMGULT_FILE" "$IMGULT_FILE"
  jpegoptim -v -m$OPTLEVEL "$IMGULT_FILE"
done

## standard options with verbosity
egrep -i "($(echo $PNGEXTENSIONS | tr ' ' '|')\$)" imgult-files.txt | \
while read IMGULT_FILE; do
  pngquant -f -v --skip-if-larger -o "$IMGULT_FILE" -- "$IMGULT_FILE"
  optipng -v $EXTRAOPTIPNARGS "$IMGULT_FILE"
done

## -b keeps the filename, -O3 uses highest optimization level
## it is an 'O' as in Oxford, not a zero (0)
egrep -i "($(echo $GIFEXTENSIONS | tr ' ' '|')\$)" imgult-files.txt | \
while read IMGULT_FILE; do
  gifsicle -V -b -O3 "$IMGULT_FILE"
done

if [ ! -z "$(which scour)" ]; then
  egrep -i "($(echo $SVGEXTENSIONS | tr ' ' '|')\$)" imgult-files.txt | \
  while read IMGULT_FILE; do
    scour -i "$IMGULT_FILE" -o scourImgultTmp --enable-viewboxing --enable-id-stripping \
      --enable-comment-stripping --shorten-ids --indent=none
    mv -v scourImgultTmp "$IMGULT_FILE"
  done
fi

## clean up!
rm -v imgult-files.txt


